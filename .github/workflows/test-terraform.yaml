---
name: Test Terraform Creation
on:
  workflow_dispatch:
    inputs:
      image-version:
        type: string
        default: eu.gcr.io/stuttgart-things/sthings-terraform:1.7.5-1
        required: false
      runs-on:
        type: string
        required: false
        default: ghr-aws-ec2-vm-sthings-cicd
      environment-name:
        type: string
        required: true
        default: k8s
      aws-region:
        type: string
        required: true
        default: eu-west-1
      module-name:
        type: string
        required: true
        default: aws-ec2-vm
      cloud:
        type: string
        required: true
        default: aws

jobs:
  Test-Aws-Connection:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: ${{ inputs.image-version }}
    environment: ${{ inputs.environment-name }}
    if: ${{ inputs.cloud == 'aws' }}
    continue-on-error: false
    steps:
      - name: Check versions
        id: version-check
        run: |
          terraform --version

      - name: Set and test aws credentials
        id: aws-creds
        run: |
          aws --version
          aws configure set region ${{ inputs.aws-region }}
          echo ${{ secrets.AWS_CONFIG }} | base64 -d > ~/.aws/credentials
          aws configure list
          aws sts get-caller-identity


  Create-Terraform-Configuration:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: ${{ inputs.image-version }}
    environment: ${{ inputs.environment-name }}
    continue-on-error: false
    steps:
      - name: Checkout code
        id: git-ckeckout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: '0'

      - name: Install python dependecies
        id: python-dependecies
        run: |
          pip3 install -r tests/requirements.txt

      - name: Create terraform configuration
        id: tf-config
        run: |
          python3 tests/create-module-test.py \
          --values tests/values.yaml \
          --path ${{ inputs.module-name }}/ \
          --source local \
          --st s3

      - name: Upload terraform configuration
        id: tf-upload
        uses: actions/upload-artifact@v4.1.0
        with:
          name: tf-config
          path: ${{ inputs.module-name }}

  Execute-Terraform-Code:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: ${{ inputs.image-version }}
    environment: ${{ inputs.environment-name }}
    needs: Create-Terraform-Configuration
    continue-on-error: false
    steps:
      - name: Checkout code
        id: git-ckeckout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: '0'

      - name: Set and test aws credentials
        if: ${{ inputs.cloud == 'aws' }}
        id: aws-creds
        run: |
          aws --version
          aws configure set region ${{ inputs.aws-region }}
          echo ${{ secrets.AWS_CONFIG }} | base64 -d > ~/.aws/credentials
          aws configure list
          aws sts get-caller-identity

      - name: Download terraform config
        id: download
        uses: actions/download-artifact@v4.1.4
        with:
          name: tf-config

      - name: Check config files
        id: config
        run: |
          ls -lta ${{ inputs.module-name }}

      - name: Execute terraform
        id: execute
        run: |
          terraform -chdir="${{ inputs.module-name }}" init --upgrade
          terraform -chdir="${{ inputs.module-name }}" plan -out apply.plan
          terraform -chdir="${{ inputs.module-name }}" apply apply.plan
          sleep 5m
          terraform -chdir="${{ inputs.module-name }}" plan -destroy -out destroy.plan
          terraform -chdir="${{ inputs.module-name }}" apply destroy.plan

      - name: Upload terraform plan
        id: upload
        uses: actions/upload-artifact@v4.1.0
        with:
          name: tf-plan
          path: |
            ${{ inputs.module-name }}/apply.plan